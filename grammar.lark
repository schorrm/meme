// Grammar for parsing.

start: "/" block+
block: instance scoped* "/"

instance: fun arg*
scoped: ";" instance
fun: VALID_BLOCK
arg: ":" VALID_BLOCK

_TILDE_SOLVE.2: /((~~)+)(?=[\/:;])/
_ESCAPE_SAFE: /(.+?)(?<!~)(~~)*?(?=[\/:;])/ // 
VALID_BLOCK: _TILDE_SOLVE | _ESCAPE_SAFE // Order here is crucial for some reason
// _TILDE_SOLVE:  /(~~)+?(?=[\/:])/

%import common.CNAME
%import common.ESCAPED_STRING
